#!/bin/sh 
echo "Starting Chefmate Applications"

CHEFMATE_ENV="development"
if [ $# -ge 1 ]; then 
    if [ $1 = "prod" ]; then
        CHEFMATE_ENV="production"
    elif [ $1 = "dev" ]; then
        CHEFMATE_ENV="development"
    fi
fi

CHEFMATE_INSTALL="false"
if [ $# -gt 1 ]; then
    if [ $2 = "install" ]; then
        CHEFMATE_INSTALL="true"
    fi
fi

if [ $CHEFMATE_INSTALL == "true" ]; then
osascript <<END
tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader RANKER; cd ranker; source ../scripts/createEnv; source venv/bin/activate; export FLASK_ENV=$CHEFMATE_ENV; pip install -r requirements.txt; python3 ranker.py"
end tell

tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader RECOMMENDER; cd recommender; source ../scripts/createEnv; source venv/bin/activate; export FLASK_ENV=$CHEFMATE_ENV; pip install -r requirements.txt; python3 recommender.py"
end tell

tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader \"NODEJS CLIENT\"; cd client; npm install; npm run startDev"
end tell

tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader \"REACT CLIENT\"; cd client/frontend; npm install; npm start"
end tell
END
else 
osascript <<END
tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader RANKER; cd ranker; source ../scripts/createEnv; source venv/bin/activate; export FLASK_ENV=$CHEFMATE_ENV; python3 ranker.py"
end tell

tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader RECOMMENDER; cd recommender; source ../scripts/createEnv; source venv/bin/activate; export FLASK_ENV=$CHEFMATE_ENV; python3 recommender.py"
end tell  

tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader \"NODEJS CLIENT\"; cd client; npm run startDev"
end tell

tell application "Terminal"
    do script "cd \"`pwd`\"; source scripts/setHeader \"REACT CLIENT\"; cd client/frontend; npm start"
end tell
END
fi